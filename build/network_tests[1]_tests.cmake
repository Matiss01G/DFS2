add_test([=[TCPPeerTest.ConnectionTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=TCPPeerTest.ConnectionTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TCPPeerTest.ConnectionTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TCPPeerTest.DisconnectionTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=TCPPeerTest.DisconnectionTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TCPPeerTest.DisconnectionTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TCPPeerTest.SendStreamTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=TCPPeerTest.SendStreamTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TCPPeerTest.SendStreamTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TCPPeerTest.ReceiveStreamTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=TCPPeerTest.ReceiveStreamTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TCPPeerTest.ReceiveStreamTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TCPPeerTest.MultipleMessagesTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=TCPPeerTest.MultipleMessagesTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TCPPeerTest.MultipleMessagesTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TCPPeerTest.EdgeCasesTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=TCPPeerTest.EdgeCasesTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TCPPeerTest.EdgeCasesTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.InitializationTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.InitializationTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.InitializationTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.AddValidPeerTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.AddValidPeerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.AddValidPeerTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.AddNullPeerTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.AddNullPeerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.AddNullPeerTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.AddDuplicatePeerTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.AddDuplicatePeerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.AddDuplicatePeerTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.RemoveExistingPeerTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.RemoveExistingPeerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.RemoveExistingPeerTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.RemoveNonExistentPeerTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.RemoveNonExistentPeerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.RemoveNonExistentPeerTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.GetNonExistentPeerTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.GetNonExistentPeerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.GetNonExistentPeerTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.ThreadSafetyTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.ThreadSafetyTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.ThreadSafetyTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.ShutdownTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.ShutdownTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.ShutdownTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.BroadcastStreamTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.BroadcastStreamTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.BroadcastStreamTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[PeerManagerTest.BroadcastMixedResultsTest]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=PeerManagerTest.BroadcastMixedResultsTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[PeerManagerTest.BroadcastMixedResultsTest]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CodecTest.BasicSerializationDeserialization]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=CodecTest.BasicSerializationDeserialization]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CodecTest.BasicSerializationDeserialization]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CodecTest.EncryptionVerification]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=CodecTest.EncryptionVerification]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CodecTest.EncryptionVerification]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CodecTest.LargeMessageHandling]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=CodecTest.LargeMessageHandling]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CodecTest.LargeMessageHandling]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CodecTest.ChannelIntegration]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=CodecTest.ChannelIntegration]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CodecTest.ChannelIntegration]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CodecTest.ErrorHandling]=]  /home/runner/StreamCryptoDFS/build/network_tests [==[--gtest_filter=CodecTest.ErrorHandling]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CodecTest.ErrorHandling]=]  PROPERTIES WORKING_DIRECTORY /home/runner/StreamCryptoDFS/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  network_tests_TESTS TCPPeerTest.ConnectionTest TCPPeerTest.DisconnectionTest TCPPeerTest.SendStreamTest TCPPeerTest.ReceiveStreamTest TCPPeerTest.MultipleMessagesTest TCPPeerTest.EdgeCasesTest PeerManagerTest.InitializationTest PeerManagerTest.AddValidPeerTest PeerManagerTest.AddNullPeerTest PeerManagerTest.AddDuplicatePeerTest PeerManagerTest.RemoveExistingPeerTest PeerManagerTest.RemoveNonExistentPeerTest PeerManagerTest.GetNonExistentPeerTest PeerManagerTest.ThreadSafetyTest PeerManagerTest.ShutdownTest PeerManagerTest.BroadcastStreamTest PeerManagerTest.BroadcastMixedResultsTest CodecTest.BasicSerializationDeserialization CodecTest.EncryptionVerification CodecTest.LargeMessageHandling CodecTest.ChannelIntegration CodecTest.ErrorHandling)
